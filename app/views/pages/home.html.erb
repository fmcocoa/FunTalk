<div class="ui vertical">
  <div class="ui center aligned page grid">
    <div class="row">
      <div class="nine wide column">
        <h1 class="ui header">Check out the Topics</h1>
        <div class="ui horizontal divider">
          <i class="gay icon"></i>
        </div>
      </div>
    </div>
  </div>
</div>

<div class="ui vertical main" id="pending-topics">
  <div class="ui center aligned page grid">
    <div class="row">
      <div class="column">
        <div class="ui success message hidden">
          <i class="close icon"></i>
          <div class="header">You just added a new topic.</div>
          <p>Your great ideas worth spreading, huh?
          </p>
        </div>
        <table class="ui very basic striped table">
          <thead>
            <tr>
              <th class="right aligned">#</th>
              <th>Topic</th>
              <th class="right aligned">Owner</th>
              <th class="right aligned">Votes</th>
            </tr>
          </thead>
          <tbody>
            <tr v-for="topic in topics">
              <td class="right aligned">{{ topic.id }}</td>
              <td><a v-bind="{href: '/topic/' + topic.id}">{{ topic.subject }}</a></td>
              <td class="right aligned">{{ topic.author }}</td>
              <td class="right aligned">
                <a v-if="voted_topic_ids.indexOf(topic.id) == -1" class="ui label" v-bind="{value: topic.id}" onclick="vote(this)">
                  <i class="thumbs outline up icon"></i>
                  <span>{{ topic.vote_count }}</span>
                </a>
                <a v-else class="ui olive label" v-bind="{value: topic.id}" onclick="cancel_vote(this)">
                  <i class="thumbs outline up icon"></i>
                  <span>{{ topic.vote_count }}</span>
                </a>
              </td>
            </tr>
          </tbody>
        </table>
      </div>
    </div>
  </div>
</div>

<div class="ui vertical">
  <div class="ui center aligned page grid">
    <div class="row">
      <div class="nine wide column">
        <div class="ui horizontal divider">
          <i class="gay icon"></i>
        </div>
      </div>
    </div>
  </div>
</div>

<div class="ui vertical">
  <div class="ui center aligned page grid">
    <div class="row">
      <div class="column">
        <button class="positive massive ui button" id="show-modal">Add a Topic</button>
      </div>
    </div>
  </div>
</div>

<div class="ui modal">
  <div class="header">
    Add a New Topic
  </div>
  <div class="content">
    <%= form_for :topic, :html => {:class => "ui form", :id => 'create-topic'}, url: topics_path do |f| %>
        <div class="field">
          <%= f.label :subject %>
          <%= f.text_field :subject, :placeholder => 'Topic Subject' %>
        </div>

        <div class="field">
          <%= f.label :description %>
          <%= f.text_area :description, :placeholder => 'Topic Description' %>
        </div>
    <% end %>
  </div>
  <div class="actions">
    <div class="ui black deny button">
      Cancel
    </div>
    <div class="ui positive right labeled icon button" id="submit-button">
      Submit
      <i class="checkmark icon"></i>
    </div>
  </div>
</div>

<script>
  var votes = <%= raw current_user.votes.to_json %>;
  var voted_topic_ids = [];
  for (var i = 0; i < votes.length; i++) {
    voted_topic_ids.push(votes[i].topic_id);
  }

  var topics = new Vue({
    el: '#pending-topics',
    data: {
      topics: [],
      voted_topic_ids: voted_topic_ids
    },
    created: function () {
      this.fetch();
    },
    attached: function () {
      console.log('attached');
    },
    methods: {
      fetch: function () {
        var self = this;
        $.ajax({
          url: '/topics/pending',
          method: 'GET',
          success: function (data) {
            if (data.s) {
              self.topics = data.q.topics;
            }
          },
          error: function (err) {
            console.error(err);
          }
        });
      }
    }
  });

  $('#show-modal').click(function () {
    $('.ui.modal').modal('setting', 'closable', false).modal('show');
  });

  $('.message .close').click(function () {
    $(this).parent().hide('slow');
  });

  $('form#create-topic').form({
    fields: {
      topic_subject: 'empty',
      topic_description: 'empty'
    }
  }).submit(function () {
    var self = $(this);
    var values = self.serialize();
    self.addClass('loading');

    $.ajax({
      type: 'POST',
      url: self.attr('action'),
      data: values
    }).success(function () {
      self.trigger('reset');
      $('.success.message').show();
      topics.fetch();
      self.removeClass('loading');
      $('.ui.modal').modal('hide');
    }).error(function () {
      self.removeClass('loading');
    });
    return false;
  });

  $('#submit-button').click(function () {
    var f = $('form#create-topic');
    if (f.form('is valid')) {
      f.submit();
    }
    return false;
  });

  function vote(el) {
    $.ajax({
      type: 'POST',
      url: '/votes/create',
      data: {topic_id: el.value}
    }).success(function () {
//      el.className = "ui olive label";
//      el.lastElementChild.innerHTML = '1';
    }).error(function () {
    });
  }

  function cancel_vote(el) {
    $.ajax({
      type: 'POST',
      url: '/votes/destroy',
      data: {topic_id: el.value}
    }).success(function () {
//      el.className = "ui label";
//      el.lastElementChild.innerHTML = '0';
    }).error(function () {
    });
  }
</script>